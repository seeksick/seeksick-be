plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'seecksick-be'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // for log
    // implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // Spring Security
    // implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2
    // implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    // implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // api validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // websocket
    // implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    testImplementation 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    // web client
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // for mac os dns
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //db
    runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
    useJUnitPlatform()
}